{"remainingRequest":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/vue-loader/lib/index.js??ref--1-1!/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/docs/public/md1.md?vue&type=template&id=9750c2da","dependencies":[{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/docs/public/md1.md","mtime":1741203879651},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/cache-loader/dist/cjs.js","mtime":1741547334975},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/cache-loader/dist/cjs.js","mtime":1741547334975},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/babel-loader/lib/index.js","mtime":1741547335076},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1741547335597},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/cache-loader/dist/cjs.js","mtime":1741547334975},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/vue-loader/lib/index.js","mtime":1741547335185},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/@vuepress/markdown-loader/index.js","mtime":1741547334249}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}