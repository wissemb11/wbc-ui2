{"remainingRequest":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/babel-loader/lib/index.js??ref--3-1!/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/@vuepress/plugin-search/match-query.js","dependencies":[{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/@vuepress/plugin-search/match-query.js","mtime":1741547334445},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/cache-loader/dist/cjs.js","mtime":1741547334975},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/babel-loader/lib/index.js","mtime":1741547335076}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLml0ZXJhdG9yLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3Iuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZG90LWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnN0aWNreS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50ZXN0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIjsKaW1wb3J0IGdldCBmcm9tICdsb2Rhc2gvZ2V0JzsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChxdWVyeSwgcGFnZSkgewogIHZhciBhZGRpdGlvbmFsU3RyID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBudWxsOwogIHZhciBkb21haW4gPSBnZXQocGFnZSwgJ3RpdGxlJywgJycpOwogIGlmIChnZXQocGFnZSwgJ2Zyb250bWF0dGVyLnRhZ3MnKSkgewogICAgZG9tYWluICs9ICIgIi5jb25jYXQocGFnZS5mcm9udG1hdHRlci50YWdzLmpvaW4oJyAnKSk7CiAgfQogIGlmIChhZGRpdGlvbmFsU3RyKSB7CiAgICBkb21haW4gKz0gIiAiLmNvbmNhdChhZGRpdGlvbmFsU3RyKTsKICB9CiAgcmV0dXJuIG1hdGNoVGVzdChxdWVyeSwgZG9tYWluKTsKfSk7CnZhciBtYXRjaFRlc3QgPSBmdW5jdGlvbiBtYXRjaFRlc3QocXVlcnksIGRvbWFpbikgewogIHZhciBlc2NhcGVSZWdFeHAgPSBmdW5jdGlvbiBlc2NhcGVSZWdFeHAoc3RyKSB7CiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1stL1xcXiQqKz8uKCl8W1xde31dL2csICdcXCQmJyk7CiAgfTsKCiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRyb2wtcmVnZXgKICB2YXIgbm9uQVNDSUlSZWdFeHAgPSBuZXcgUmVnRXhwKCdbXlx4MDAtXHg3Rl0nKTsKICB2YXIgd29yZHMgPSBxdWVyeS5zcGxpdCgvXHMrL2cpLm1hcChmdW5jdGlvbiAoc3RyKSB7CiAgICByZXR1cm4gc3RyLnRyaW0oKTsKICB9KS5maWx0ZXIoZnVuY3Rpb24gKHN0cikgewogICAgcmV0dXJuICEhc3RyOwogIH0pOwogIGlmICghbm9uQVNDSUlSZWdFeHAudGVzdChxdWVyeSkpIHsKICAgIC8vIGlmIHRoZSBxdWVyeSBvbmx5IGhhcyBBU0NJSSBjaGFycywgdHJlYXQgYXMgRW5nbGlzaAogICAgdmFyIGhhc1RyYWlsaW5nU3BhY2UgPSBxdWVyeS5lbmRzV2l0aCgnICcpOwogICAgdmFyIHNlYXJjaFJlZ2V4ID0gbmV3IFJlZ0V4cCh3b3Jkcy5tYXAoZnVuY3Rpb24gKHdvcmQsIGluZGV4KSB7CiAgICAgIGlmICh3b3Jkcy5sZW5ndGggPT09IGluZGV4ICsgMSAmJiAhaGFzVHJhaWxpbmdTcGFjZSkgewogICAgICAgIC8vIFRoZSBsYXN0IHdvcmQgLSBvayB3aXRoIHRoZSB3b3JkIGJlaW5nICJzdGFydHN3aXRoIi1saWtlCiAgICAgICAgcmV0dXJuICIoPz0uKlxcYiIuY29uY2F0KGVzY2FwZVJlZ0V4cCh3b3JkKSwgIikiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBOb3QgdGhlIGxhc3Qgd29yZCAtIGV4cGVjdCB0aGUgd2hvbGUgd29yZCBleGFjdGx5CiAgICAgICAgcmV0dXJuICIoPz0uKlxcYiIuY29uY2F0KGVzY2FwZVJlZ0V4cCh3b3JkKSwgIlxcYikiKTsKICAgICAgfQogICAgfSkuam9pbignJykgKyAnLisnLCAnZ2knKTsKICAgIHJldHVybiBzZWFyY2hSZWdleC50ZXN0KGRvbWFpbik7CiAgfSBlbHNlIHsKICAgIC8vIGlmIHRoZSBxdWVyeSBoYXMgbm9uLUFTQ0lJIGNoYXJzLCB0cmVhdCBhcyBvdGhlciBsYW5ndWFnZXMKICAgIHJldHVybiB3b3Jkcy5zb21lKGZ1bmN0aW9uICh3b3JkKSB7CiAgICAgIHJldHVybiBkb21haW4udG9Mb3dlckNhc2UoKS5pbmRleE9mKHdvcmQpID4gLTE7CiAgICB9KTsKICB9Cn07"},{"version":3,"names":["get","query","page","additionalStr","arguments","length","undefined","domain","concat","frontmatter","tags","join","matchTest","escapeRegExp","str","replace","nonASCIIRegExp","RegExp","words","split","map","trim","filter","test","hasTrailingSpace","endsWith","searchRegex","word","index","some","toLowerCase","indexOf"],"sources":["/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/@vuepress/plugin-search/match-query.js"],"sourcesContent":["\nimport get from 'lodash/get'\n\nexport default (query, page, additionalStr = null) => {\n  let domain = get(page, 'title', '')\n\n  if (get(page, 'frontmatter.tags')) {\n    domain += ` ${page.frontmatter.tags.join(' ')}`\n  }\n\n  if (additionalStr) {\n    domain += ` ${additionalStr}`\n  }\n\n  return matchTest(query, domain)\n}\n\nconst matchTest = (query, domain) => {\n  const escapeRegExp = str => str.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n\n  // eslint-disable-next-line no-control-regex\n  const nonASCIIRegExp = new RegExp('[^\\x00-\\x7F]')\n\n  const words = query\n    .split(/\\s+/g)\n    .map(str => str.trim())\n    .filter(str => !!str)\n\n  if (!nonASCIIRegExp.test(query)) {\n    // if the query only has ASCII chars, treat as English\n    const hasTrailingSpace = query.endsWith(' ')\n    const searchRegex = new RegExp(\n      words\n      .map((word, index) => {\n        if (words.length === index + 1 && !hasTrailingSpace) {\n          // The last word - ok with the word being \"startswith\"-like\n          return `(?=.*\\\\b${escapeRegExp(word)})`\n        } else {\n          // Not the last word - expect the whole word exactly\n          return `(?=.*\\\\b${escapeRegExp(word)}\\\\b)`\n        }\n      })\n      .join('') + '.+',\n      'gi'\n    )\n    return searchRegex.test(domain)\n  } else {\n    // if the query has non-ASCII chars, treat as other languages\n    return words.some(word => domain.toLowerCase().indexOf(word) > -1)\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AACA,OAAOA,GAAG,MAAM,YAAY;AAE5B,gBAAe,UAACC,KAAK,EAAEC,IAAI,EAA2B;EAAA,IAAzBC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAC/C,IAAIG,MAAM,GAAGP,GAAG,CAACE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;EAEnC,IAAIF,GAAG,CAACE,IAAI,EAAE,kBAAkB,CAAC,EAAE;IACjCK,MAAM,QAAAC,MAAA,CAAQN,IAAI,CAACO,WAAW,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,CAAE;EACjD;EAEA,IAAIR,aAAa,EAAE;IACjBI,MAAM,QAAAC,MAAA,CAAQL,aAAa,CAAE;EAC/B;EAEA,OAAOS,SAAS,CAACX,KAAK,EAAEM,MAAM,CAAC;AACjC,CAAC;AAED,IAAMK,SAAS,GAAG,SAAZA,SAASA,CAAIX,KAAK,EAAEM,MAAM,EAAK;EACnC,IAAMM,YAAY,GAAG,SAAfA,YAAYA,CAAGC,GAAG;IAAA,OAAIA,GAAG,CAACC,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC;EAAA;;EAExE;EACA,IAAMC,cAAc,GAAG,IAAIC,MAAM,CAAC,cAAc,CAAC;EAEjD,IAAMC,KAAK,GAAGjB,KAAK,CAChBkB,KAAK,CAAC,MAAM,CAAC,CACbC,GAAG,CAAC,UAAAN,GAAG;IAAA,OAAIA,GAAG,CAACO,IAAI,CAAC,CAAC;EAAA,EAAC,CACtBC,MAAM,CAAC,UAAAR,GAAG;IAAA,OAAI,CAAC,CAACA,GAAG;EAAA,EAAC;EAEvB,IAAI,CAACE,cAAc,CAACO,IAAI,CAACtB,KAAK,CAAC,EAAE;IAC/B;IACA,IAAMuB,gBAAgB,GAAGvB,KAAK,CAACwB,QAAQ,CAAC,GAAG,CAAC;IAC5C,IAAMC,WAAW,GAAG,IAAIT,MAAM,CAC5BC,KAAK,CACJE,GAAG,CAAC,UAACO,IAAI,EAAEC,KAAK,EAAK;MACpB,IAAIV,KAAK,CAACb,MAAM,KAAKuB,KAAK,GAAG,CAAC,IAAI,CAACJ,gBAAgB,EAAE;QACnD;QACA,kBAAAhB,MAAA,CAAkBK,YAAY,CAACc,IAAI,CAAC;MACtC,CAAC,MAAM;QACL;QACA,kBAAAnB,MAAA,CAAkBK,YAAY,CAACc,IAAI,CAAC;MACtC;IACF,CAAC,CAAC,CACDhB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,EAChB,IACF,CAAC;IACD,OAAOe,WAAW,CAACH,IAAI,CAAChB,MAAM,CAAC;EACjC,CAAC,MAAM;IACL;IACA,OAAOW,KAAK,CAACW,IAAI,CAAC,UAAAF,IAAI;MAAA,OAAIpB,MAAM,CAACuB,WAAW,CAAC,CAAC,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAC;IAAA,EAAC;EACpE;AACF,CAAC","ignoreList":[]}]}