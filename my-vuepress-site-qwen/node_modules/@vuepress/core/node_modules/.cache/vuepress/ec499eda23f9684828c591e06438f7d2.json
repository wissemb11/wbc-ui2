{"remainingRequest":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/node_modules/pdfvuer/src/Pdfvuer.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/node_modules/pdfvuer/src/Pdfvuer.vue","mtime":1741547146076},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/cache-loader/dist/cjs.js","mtime":1741547334975},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/babel-loader/lib/index.js","mtime":1741547335076},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/cache-loader/dist/cjs.js","mtime":1741547334975},{"path":"/home/wissemb11/Allprojects/my_data/web_dev/global_frontend/src/myProducts/myPackages/1.0.0/wbc-ui2/next/my-vuepress-site-qwen/node_modules/vue-loader/lib/index.js","mtime":1741547335185}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Pdfvuer.vue"],"names":[],"mappingsfile":"Pdfvuer.vue","sourceRoot":"../node_modules/pdfvuer/src","sourcesContent":["<template>\n  <div>\n    <slot v-if=\"loading\" name=\"loading\"/>\n    <div id=\"viewerContainer\" ref=\"container\">\n      <div id=\"viewer\" class=\"pdfViewer\"/>\n      <resizeSensor :initial=\"true\" @resize=\"resizeScale\"/>\n    </div>\n  </div>\n</template>\n<script>\n  'use strict';\n\n  import { getDocument } from 'pdfjs-dist';\n  import {\n    DefaultAnnotationLayerFactory,\n    DefaultTextLayerFactory,\n    PDFFindController,\n    PDFLinkService,\n    PDFPageView,\n    EventBus\n  } from 'pdfjs-dist/web/pdf_viewer.js';\n  import resizeSensor from 'vue-resize-sensor'\n  import PdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry'\n  function isPDFDocumentLoadingTask(obj) {\n    return typeof (obj) === 'object' && obj !== null && obj.__PDFDocumentLoadingTask === true;\n  }\n\n  export function createLoadingTask(src, options) {\n    var source;\n    if (typeof (src) === 'string')\n      source = {\n        url: src\n      };\n    else if (typeof (src) === 'object' && src !== null)\n      source = Object.assign({}, src);\n    else\n      throw new TypeError('invalid src type');\n\n    var loadingTask = getDocument(source).promise;\n    loadingTask.__PDFDocumentLoadingTask = true; // since PDFDocumentLoadingTask is not public\n\n    if (options && options.onPassword)\n      loadingTask.onPassword = options.onPassword;\n\n    if (options && options.onProgress)\n      loadingTask.onProgress = options.onProgress;\n\n    return loadingTask;\n  }\n\n  export default {\n    createLoadingTask: createLoadingTask,\n    components: {\n      resizeSensor\n    },\n    props: {\n      src: {\n        type: [String, Object, Promise],\n        default: '',\n      },\n      page: {\n        type: Number,\n        default: 1,\n      },\n      rotate: {\n        type: Number,\n        default: 0,\n      },\n      scale: {\n        type: [Number, String],\n        default: 'page-width',\n      },\n      resize: {\n        type: Boolean,\n        default: false,\n      },\n      annotation: {\n        type: Boolean,\n        default: false,\n      },\n      text: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    data: function () {\n      return {\n        internalSrc: this.src,\n        pdf: null,\n        pdfViewer: null,\n        loading: true,\n      }\n    },\n    watch: {\n      pdf: function (val) {\n        var pdfInfo = val.pdfInfo || val._pdfInfo\n        this.$emit('numpages', pdfInfo.numPages);\n      },\n      page: function (val) {\n        var self = this;\n        this.pdf.getPage(val).then(function (pdfPage) {\n          self.pdfViewer.setPdfPage(pdfPage);\n          self.pdfViewer.draw();\n        });\n      },\n      scale: function (val) {\n        this.drawScaled(val);\n      },\n      rotate: function (newRotate) {\n        if (this.pdfViewer) {\n          this.pdfViewer.update(this.scale, newRotate);\n          this.pdfViewer.draw();\n        }\n      },\n    },\n    mounted: function () {\n      var self = this;\n      if (!isPDFDocumentLoadingTask(self.internalSrc)) {\n        self.internalSrc = createLoadingTask(self.internalSrc);\n        self.$emit('loading', true);\n      }\n\n      var container = this.$refs.container;\n      var eventBus = new EventBus();\n      eventBus.on('pagerendered', function(e) {\n        self.$emit('pagerendered',e);\n      });      \n\n      // (Optionally) enable hyperlinks within PDF files.\n      self.pdfLinkService = new PDFLinkService({\n        eventBus: eventBus,\n        externalLinkTarget: 2\n      });\n\n      // (Optionally) enable find controller.\n      self.pdfFindController = new PDFFindController({\n        eventBus: eventBus,\n        linkService: self.pdfLinkService\n      });\n\n      let annotationLayer = undefined,\n        textLayer = undefined;\n\n      if (self.annotation) {\n        annotationLayer = new DefaultAnnotationLayerFactory();\n      }\n      if (self.text) {\n        textLayer = new DefaultTextLayerFactory();\n      }\n\n      self.internalSrc\n        .then(function (pdfDocument) {\n          // Document loaded, retrieving the page.\n          self.pdf = pdfDocument;\n          return pdfDocument.getPage(self.page)\n        }).then(function (pdfPage) {\n          // Creating the page view with default parameters.\n          self.pdfViewer = new PDFPageView({\n            container: container,\n            id: self.page,\n            scale: 1,\n            defaultViewport: pdfPage.getViewport({\n              scale: 1\n            }),\n            eventBus: eventBus,\n            textLayerFactory: textLayer,\n            annotationLayerFactory: annotationLayer,\n          });\n          // Associates the actual page with the view, and drawing it\n          self.pdfViewer.setPdfPage(pdfPage);\n          // Set up a scrollPageIntoView function for our links\n          var viewer = {\n            scrollPageIntoView: function(params) {\n              // Send an event when clicking internal links so we can handle loading/scrolling to the correct page\n              self.$emit('link-clicked', params);\n            },\n          };\n          self.pdfLinkService.setDocument(self.pdf);\n          self.pdfLinkService.setViewer(viewer);\n          self.pdfFindController.setDocument(self.pdf);\n          self.drawScaled(self.scale);\n\n          self.loading = false;\n          self.$emit('loading', false);\n        }).catch(err => {\n          self.$emit('error', err)\n          self.loading = false\n          self.$emit('loading', false);\n        })\n    },\n    beforeDestroy() {\n      var self = this;\n      if (self.pdfViewer) {\n        self.pdfViewer.destroy();\n        self.pdfViewer = null;\n      }\n    },\n    methods: {\n      calculateScale: function (width = -1, height = -1) {\n        this.pdfViewer.update(1, this.rotate); // Reset scaling to 1 so that \"this.pdfViewer.viewport.width\" gives proper width;\n        if (width === -1 && height === -1) {\n          width = this.$refs.container.offsetWidth;\n        }\n\n        return width / this.pdfViewer.viewport.width;\n      },\n      calculateScaleHeight: function () {\n        this.pdfViewer.update(1, this.rotate); // Reset scaling to 1 so that \"this.pdfViewer.viewport.width\" gives proper width;\n        var height = this.$refs.container.offsetHeight;\n        var parentel = this.$refs.container.parentElement.parentElement;\n        return parentel.offsetHeight / height;\n      },\n      drawScaled: function (newScale) {\n        if (this.pdfViewer) {\n          if (newScale === 'page-width') {\n            newScale = this.calculateScale();\n            this.$emit(\"update:scale\", newScale);\n          }\n          else if (newScale === 'page-height') {\n            newScale = this.calculateScaleHeight();\n            this.$emit(\"update:scale\", newScale);\n          }\n          this.pdfViewer.update(newScale, this.rotate);\n          // The SimpleLinkService from the DefaultAnnotationLayerFactory doesn't do anything with links so override with our LinkService after it is created\n          if(this.annotation) {\n            this.pdfViewer.annotationLayer = this.pdfViewer.annotationLayerFactory.createAnnotationLayerBuilder(this.pdfViewer.div, this.pdfViewer.pdfPage);\n            this.pdfViewer.annotationLayer.linkService = this.pdfLinkService;\n          }\n          this.pdfViewer.draw();\n          // The findController needs the text layer to have been created in the Draw() function, so link it in now\n          if (this.text) {\n            this.pdfViewer.textLayer.findController = this.pdfFindController;\n          }\n          this.loading = false;\n          this.$emit('loading', false);\n        }\n      },\n      resizeScale: function () {\n        if (this.resize) {\n          this.drawScaled('page-width');\n        }\n      }\n    }\n  }\n</script>\n<style src=\"pdfjs-dist/web/pdf_viewer.css\"></style>\n"]}]}